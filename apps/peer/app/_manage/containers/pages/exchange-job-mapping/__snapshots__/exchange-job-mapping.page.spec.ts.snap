// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Peer - Exchange Job Mapping Page should apply a collapse-grid class to the exchange-job-mapping-grid-container, when collapse is true 1`] = `
<pf-exchange-job-mapping-page
  _Permissions={[Function Function]}
  collapse={[Function Boolean]}
  companyJobsSearchComponent={[Function ElementRef]}
  companySecurityApi={[Function Object]}
  disableGridScollTo="false"
  enableFileDownloadSecurityWarning="false"
  enableFileDownloadSecurityWarning$={[Function Observable]}
  enableFileDownloadSecurityWarningSubscription={[Function Subscriber]}
  exchangeId={[Function Number]}
  exchangeId$={[Function Observable]}
  exchangeIdSubscription={[Function Subscriber]}
  exchangeJobMappingGridService={[Function Object]}
  featureFlagService={[Function Object]}
  fileDownloadSecurityWarningModal={[Function ElementRef]}
  gridPageRowIndexToScrollTo$={[Function Store]}
  peerManageJobsGridToggleFlag={[Function Object]}
  queryParamSubscription={[Function Subscriber]}
  queryParams$={[Function Observable]}
  route={[Function Object]}
  selectedCompanyJob$={[Function Store]}
  selectedExchangeJobMapping$={[Function Store]}
  selectedExchangeJobMappingSubscription={[Function Subscriber]}
  settingsService={[Function SettingsService]}
  showCompanyJobs="false"
  showCompanyJobsSubscription={[Function Subscriber]}
  store={[Function Store]}
  unsubscribe$={[Function Subject]}
  userContext$={[Function Store]}
>
  <pf-page-with-title-bar>
    
     Manage Jobs 
    
    
    <pf-exchange-switcher />
    <div
      class="omni-box"
    >
      <pf-input-debounce
        class="d-none"
        id="company-job-search-box"
      />
      <pf-input-debounce
        id="exchange-job-search-box"
      />
    </div>
    <button
      class="btn btn-secondary"
      type="button"
    >
      Request Exchange Job
    </button>
    <button
      class="btn btn-secondary"
      id="export-popover-btn"
      placement="bottom"
      title="Export to Excel"
      type="button"
    >
      <fa-icon
        aria-hidden="true"
        icon="download"
      />
    </button>
    <button
      class="btn btn-secondary"
      id="import-popover-btn"
      placement="bottom"
      title="Import Matches"
      type="button"
    >
      <fa-icon
        aria-hidden="true"
        icon="upload"
      />
    </button>
    
    
    <div
      class="flex-column-container"
    >
      <div
        class="h-100"
      >
        <pf-exchange-job-mapping-grid />
      </div>
      
    </div>
    
  </pf-page-with-title-bar><pf-request-job-modal /><pf-association-import-modal /><pf-file-download-security-warning-modal />
</pf-exchange-job-mapping-page>
`;

exports[`Peer - Exchange Job Mapping Page should show the correct header message and company jobs grid when the company jobs grid is enabled 1`] = `
<pf-exchange-job-mapping-page
  _Permissions={[Function Function]}
  collapse="false"
  companyJobsSearchComponent={[Function ElementRef]}
  companySecurityApi={[Function Object]}
  disableGridScollTo="false"
  enableFileDownloadSecurityWarning="false"
  enableFileDownloadSecurityWarning$={[Function Observable]}
  enableFileDownloadSecurityWarningSubscription={[Function Subscriber]}
  exchangeId={[Function Number]}
  exchangeId$={[Function Observable]}
  exchangeIdSubscription={[Function Subscriber]}
  exchangeJobMappingGridService={[Function Object]}
  featureFlagService={[Function Object]}
  fileDownloadSecurityWarningModal={[Function ElementRef]}
  gridPageRowIndexToScrollTo$={[Function Store]}
  peerManageJobsGridToggleFlag={[Function Object]}
  queryParamSubscription={[Function Subscriber]}
  queryParams$={[Function Observable]}
  route={[Function Object]}
  selectedCompanyJob$={[Function Store]}
  selectedExchangeJobMapping$={[Function Store]}
  selectedExchangeJobMappingSubscription={[Function Subscriber]}
  settingsService={[Function SettingsService]}
  showCompanyJobs={[Function Boolean]}
  showCompanyJobsSubscription={[Function Subscriber]}
  store={[Function Store]}
  unsubscribe$={[Function Subject]}
  userContext$={[Function Store]}
>
  <pf-page-with-title-bar>
    
     Manage Jobs 
    
    
    <pf-exchange-switcher />
    <div
      class="omni-box"
    >
      <pf-input-debounce
        id="company-job-search-box"
      />
      <pf-input-debounce
        class="d-none"
        id="exchange-job-search-box"
      />
    </div>
    <button
      class="btn btn-secondary"
      type="button"
    >
      Request Exchange Job
    </button>
    <button
      class="btn btn-secondary"
      id="export-popover-btn"
      placement="bottom"
      title="Export to Excel"
      type="button"
    >
      <fa-icon
        aria-hidden="true"
        icon="download"
      />
    </button>
    <button
      class="btn btn-secondary"
      id="import-popover-btn"
      placement="bottom"
      title="Import Matches"
      type="button"
    >
      <fa-icon
        aria-hidden="true"
        icon="upload"
      />
    </button>
    
    
    <div
      class="flex-column-container"
    >
      <div
        class="h-100"
      >
        <pf-company-jobs-grid />
        
      </div>
    </div>
    
  </pf-page-with-title-bar><pf-request-job-modal /><pf-association-import-modal /><pf-file-download-security-warning-modal />
</pf-exchange-job-mapping-page>
`;

exports[`Peer - Exchange Job Mapping Page should show the correct header message and exchange jobs grid when the company jobs grid is disabled 1`] = `
<pf-exchange-job-mapping-page
  _Permissions={[Function Function]}
  collapse="false"
  companyJobsSearchComponent={[Function ElementRef]}
  companySecurityApi={[Function Object]}
  disableGridScollTo="false"
  enableFileDownloadSecurityWarning="false"
  enableFileDownloadSecurityWarning$={[Function Observable]}
  enableFileDownloadSecurityWarningSubscription={[Function Subscriber]}
  exchangeId={[Function Number]}
  exchangeId$={[Function Observable]}
  exchangeIdSubscription={[Function Subscriber]}
  exchangeJobMappingGridService={[Function Object]}
  featureFlagService={[Function Object]}
  fileDownloadSecurityWarningModal={[Function ElementRef]}
  gridPageRowIndexToScrollTo$={[Function Store]}
  peerManageJobsGridToggleFlag={[Function Object]}
  queryParamSubscription={[Function Subscriber]}
  queryParams$={[Function Observable]}
  route={[Function Object]}
  selectedCompanyJob$={[Function Store]}
  selectedExchangeJobMapping$={[Function Store]}
  selectedExchangeJobMappingSubscription={[Function Subscriber]}
  settingsService={[Function SettingsService]}
  showCompanyJobs="false"
  showCompanyJobsSubscription={[Function Subscriber]}
  store={[Function Store]}
  unsubscribe$={[Function Subject]}
  userContext$={[Function Store]}
>
  <pf-page-with-title-bar>
    
     Manage Jobs 
    
    
    <pf-exchange-switcher />
    <div
      class="omni-box"
    >
      <pf-input-debounce
        class="d-none"
        id="company-job-search-box"
      />
      <pf-input-debounce
        id="exchange-job-search-box"
      />
    </div>
    <button
      class="btn btn-secondary"
      type="button"
    >
      Request Exchange Job
    </button>
    <button
      class="btn btn-secondary"
      id="export-popover-btn"
      placement="bottom"
      title="Export to Excel"
      type="button"
    >
      <fa-icon
        aria-hidden="true"
        icon="download"
      />
    </button>
    <button
      class="btn btn-secondary"
      id="import-popover-btn"
      placement="bottom"
      title="Import Matches"
      type="button"
    >
      <fa-icon
        aria-hidden="true"
        icon="upload"
      />
    </button>
    
    
    <div
      class="flex-column-container"
    >
      <div
        class="h-100"
      >
        <pf-exchange-job-mapping-grid />
      </div>
      
    </div>
    
  </pf-page-with-title-bar><pf-request-job-modal /><pf-association-import-modal /><pf-file-download-security-warning-modal />
</pf-exchange-job-mapping-page>
`;
