// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Auth - Forgot Password should disable reset password button and text when submitting 1`] = `
<pf-forgot-password-page
  attemptedFormSubmit="false"
  emailForm={[Function FormGroup]}
  emailRegex={[Function RegExp]}
  errorSubscription={[Function Subscriber]}
  formControlEmail=""
  formSubmitSuccess="false"
  formSubmitting={[Function Boolean]}
  loadingSubscription={[Function Subscriber]}
  store={[Function Store]}
  submissionError="false"
  submitError$={[Function Observable]}
  submitSuccess$={[Function Observable]}
  submitting$={[Function Observable]}
  successSubscription={[Function Subscriber]}
>
  <div
    class="content p-4"
  >
    <h1
      class="mb-5"
    >
      Reset Password
    </h1>
    <p>
      Please enter your email address and we will send you a password reset link.
    </p>
    <form
      class="ng-untouched ng-pristine ng-invalid"
      ng-reflect-form="[object Object]"
      novalidate=""
    >
      <div
        class="reset-box ml-auto mr-auto mt-4 mb-3"
      >
        <label
          class="label label-default float-left font-weight-bold"
          for="txtEmail"
          id="lblEmail"
        >
          EMAIL ADDRESS
        </label>
        <input
          class="form-control ng-untouched ng-pristine ng-invalid"
          formcontrolname="email"
          id="txtEmail"
          name="email"
          ng-reflect-name="email"
          placeholder="johndoe@notmail.com"
          type="email"
        />
        
      </div>
      <button
        class="btn btn-primary disabled"
        disabled=""
        type="button"
      >
        
        
        <span>
          PROCESSING...
        </span>
      </button>
    </form>
  </div>
</pf-forgot-password-page>
`;

exports[`Auth - Forgot Password should show email sent notification on submitSuccess 1`] = `
<pf-forgot-password-page
  attemptedFormSubmit="false"
  emailForm={[Function FormGroup]}
  emailRegex={[Function RegExp]}
  errorSubscription={[Function Subscriber]}
  formControlEmail=""
  formSubmitSuccess={[Function Boolean]}
  formSubmitting="false"
  loadingSubscription={[Function Subscriber]}
  store={[Function Store]}
  submissionError="false"
  submitError$={[Function Observable]}
  submitSuccess$={[Function Observable]}
  submitting$={[Function Observable]}
  successSubscription={[Function Subscriber]}
>
  <div
    class="content p-4"
  >
    <h1>
      Password Reset Sent!
    </h1>
    <p
      class="mt-4"
    >
      We've sent you an email containing a link that will allow you to reset your password for the next 24 hours. 
      <br />
       Please check your spam folder if the email doesn't appear within a few minutes.
    </p>
    <a
      class="btn btn-primary mt-3"
      href="/"
    >
       Return to Login 
    </a>
  </div>
</pf-forgot-password-page>
`;

exports[`Auth - Forgot Password should show error notification on submitError 1`] = `
<pf-forgot-password-page
  attemptedFormSubmit="false"
  emailForm={[Function FormGroup]}
  emailRegex={[Function RegExp]}
  errorSubscription={[Function Subscriber]}
  formControlEmail=""
  formSubmitSuccess="false"
  formSubmitting="false"
  loadingSubscription={[Function Subscriber]}
  store={[Function Store]}
  submissionError={[Function Boolean]}
  submitError$={[Function Observable]}
  submitSuccess$={[Function Observable]}
  submitting$={[Function Observable]}
  successSubscription={[Function Subscriber]}
>
  <div
    class="content p-4"
  >
    <p
      class="text-danger"
    >
      Sorry we couldn't process this request, please contact your system administrator.
    </p>
  </div>
</pf-forgot-password-page>
`;

exports[`Auth - Forgot Password should show reset password section when page is loaded 1`] = `
<pf-forgot-password-page
  attemptedFormSubmit="false"
  emailForm={[Function FormGroup]}
  emailRegex={[Function RegExp]}
  errorSubscription={[Function Subscriber]}
  formControlEmail=""
  formSubmitSuccess="false"
  formSubmitting="false"
  loadingSubscription={[Function Subscriber]}
  store={[Function Store]}
  submissionError="false"
  submitError$={[Function Observable]}
  submitSuccess$={[Function Observable]}
  submitting$={[Function Observable]}
  successSubscription={[Function Subscriber]}
>
  <div
    class="content p-4"
  >
    <h1
      class="mb-5"
    >
      Reset Password
    </h1>
    <p>
      Please enter your email address and we will send you a password reset link.
    </p>
    <form
      class="ng-untouched ng-pristine ng-invalid"
      ng-reflect-form="[object Object]"
      novalidate=""
    >
      <div
        class="reset-box ml-auto mr-auto mt-4 mb-3"
      >
        <label
          class="label label-default float-left font-weight-bold"
          for="txtEmail"
          id="lblEmail"
        >
          EMAIL ADDRESS
        </label>
        <input
          class="form-control ng-untouched ng-pristine ng-invalid"
          formcontrolname="email"
          id="txtEmail"
          name="email"
          ng-reflect-name="email"
          placeholder="johndoe@notmail.com"
          type="email"
        />
        
      </div>
      <button
        class="btn btn-primary"
        type="button"
      >
        
        <span>
          RESET PASSWORD
        </span>
        
      </button>
    </form>
  </div>
</pf-forgot-password-page>
`;
