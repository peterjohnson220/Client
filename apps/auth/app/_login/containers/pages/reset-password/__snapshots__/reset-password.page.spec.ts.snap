// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Auth - Reset Password should disable reset password button and text when submitting 1`] = `
<pf-reset-password
  checkingResetToken$={[Function Store]}
  forgotPasswordLink={[Function String]}
  minLength$={[Function Observable]}
  passwordAlreadyUsed$={[Function Store]}
  passwordAlreadyUsedSubscription={[Function Subscriber]}
  resetError$={[Function Observable]}
  resetSuccess$={[Function Observable]}
  resetTokenExpired$={[Function Observable]}
  route={[Function Object]}
  store={[Function Store]}
  submitEnabled="false"
  submitting={[Function Boolean]}
  token={[Function String]}
  tokenValid$={[Function Observable]}
  unsubscribe$={[Function Subject]}
  username$={[Function Store]}
>
  <pf-async-container>
    <div
      class="p-5"
    >
      
      <div>
        <h1
          class="mb-5"
        >
          Reset Password
        </h1>
        
        <pf-confirm-password />
        <div
          class="text-center"
        >
          <button
            class="btn m-4 submit-button disabled"
            disabled=""
          >
            
            
            <span>
              PROCESSING...
            </span>
          </button>
        </div>
      </div>
      
      
      
      
    </div>
  </pf-async-container>
</pf-reset-password>
`;

exports[`Auth - Reset Password should show error section on resetError 1`] = `
<pf-reset-password
  checkingResetToken$={[Function Store]}
  forgotPasswordLink={[Function String]}
  minLength$={[Function Observable]}
  passwordAlreadyUsed$={[Function Store]}
  passwordAlreadyUsedSubscription={[Function Subscriber]}
  resetError$={[Function Observable]}
  resetSuccess$={[Function Observable]}
  resetTokenExpired$={[Function Observable]}
  route={[Function Object]}
  store={[Function Store]}
  submitEnabled="false"
  submitting={[Function Boolean]}
  token={[Function String]}
  tokenValid$={[Function Observable]}
  unsubscribe$={[Function Subject]}
  username$={[Function Store]}
>
  <pf-async-container>
    <div
      class="p-5"
    >
      
      
      
      
      <div
        class="content p-4"
      >
        <p
          class="text-danger"
        >
          Sorry we couldn't process this request, please contact your system administrator.
        </p>
        <div
          class="text-center"
        >
          <a
            class="btn mt-3 submit-button"
            href="/"
          >
             Return to Login 
          </a>
        </div>
      </div>
      
    </div>
  </pf-async-container>
</pf-reset-password>
`;

exports[`Auth - Reset Password should show password reset success section  1`] = `
<pf-reset-password
  checkingResetToken$={[Function Store]}
  forgotPasswordLink={[Function String]}
  minLength$={[Function Observable]}
  passwordAlreadyUsed$={[Function Store]}
  passwordAlreadyUsedSubscription={[Function Subscriber]}
  resetError$={[Function Observable]}
  resetSuccess$={[Function Observable]}
  resetTokenExpired$={[Function Observable]}
  route={[Function Object]}
  store={[Function Store]}
  submitEnabled="false"
  submitting={[Function Boolean]}
  token={[Function String]}
  tokenValid$={[Function Observable]}
  unsubscribe$={[Function Subject]}
  username$={[Function Store]}
>
  <pf-async-container>
    <div
      class="p-5"
    >
      
      
      <div
        class="content p-4"
      >
        <h1>
          Password successfully Reset!
        </h1>
        <div
          class="text-center"
        >
          <a
            class="btn mt-3 submit-button"
            href="/"
          >
             Return to Login 
          </a>
        </div>
      </div>
      
      
      
    </div>
  </pf-async-container>
</pf-reset-password>
`;

exports[`Auth - Reset Password should show password used section on passwordAlreadyUsed 1`] = `
<pf-reset-password
  checkingResetToken$={[Function Store]}
  forgotPasswordLink={[Function String]}
  minLength$={[Function Observable]}
  passwordAlreadyUsed$={[Function Observable]}
  passwordAlreadyUsedSubscription={[Function Subscriber]}
  resetError$={[Function Observable]}
  resetSuccess$={[Function Observable]}
  resetTokenExpired$={[Function Observable]}
  route={[Function Object]}
  store={[Function Store]}
  submitEnabled={[Function Boolean]}
  submitting="false"
  token={[Function String]}
  tokenValid$={[Function Observable]}
  unsubscribe$={[Function Subject]}
  username$={[Function Store]}
>
  <pf-async-container>
    <div
      class="p-5"
    >
      
      <div>
        <h1
          class="mb-5"
        >
          Reset Password
        </h1>
        
        <pf-confirm-password />
        <div
          class="text-center"
        >
          <button
            class="btn m-4 submit-button"
          >
            
            <span>
              RESET PASSWORD
            </span>
            
          </button>
        </div>
      </div>
      
      
      
      
      <div
        class="content p-4"
      >
        <p
          class="text-danger"
        >
           Sorry, it looks like that password has already been used.
          <br />
           Please try entering a new password. 
        </p>
      </div>
    </div>
  </pf-async-container>
</pf-reset-password>
`;

exports[`Auth - Reset Password should show reset password section when page is loaded 1`] = `
<pf-reset-password
  checkingResetToken$={[Function Store]}
  forgotPasswordLink={[Function String]}
  minLength$={[Function Observable]}
  passwordAlreadyUsed$={[Function Store]}
  passwordAlreadyUsedSubscription={[Function Subscriber]}
  resetError$={[Function Observable]}
  resetSuccess$={[Function Observable]}
  resetTokenExpired$={[Function Observable]}
  route={[Function Object]}
  store={[Function Store]}
  submitEnabled="false"
  token={[Function String]}
  tokenValid$={[Function Observable]}
  unsubscribe$={[Function Subject]}
  username$={[Function Store]}
>
  <pf-async-container>
    <div
      class="p-5"
    >
      
      <div>
        <h1
          class="mb-5"
        >
          Reset Password
        </h1>
        
        <pf-confirm-password />
        <div
          class="text-center"
        >
          <button
            class="btn m-4 submit-button disabled"
            disabled=""
          >
            
            <span>
              RESET PASSWORD
            </span>
            
          </button>
        </div>
      </div>
      
      
      
      
    </div>
  </pf-async-container>
</pf-reset-password>
`;
