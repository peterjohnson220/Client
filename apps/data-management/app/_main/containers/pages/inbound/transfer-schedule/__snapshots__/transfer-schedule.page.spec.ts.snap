// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TransferSchedulePageComponent should show only supported entities 1`] = `
<pf-transfer-schedule
  backRoute={[Function String]}
  connectionSummarySub={[Function Subscriber]}
  editStates={[Function Array]}
  emailRecipients$={[Function Store]}
  emailRecipientsModalOpen$={[Function Store]}
  emailRecipientsRemovingError$={[Function Store]}
  emailRecipientsSavingError$={[Function Store]}
  identity$={[Function Store]}
  identitySubscription={[Function Subscriber]}
  loadType={[Function String]}
  restoreCompletedSubscription={[Function Subscriber]}
  router={[Function Object]}
  showIntegrationFinishedModal$={[Function Store]}
  store={[Function MockStore]}
  syncSchedulesBackup={[Function Array]}
  transferScheduleSummary={[Function Array]}
  transferScheduleSummary$={[Function Observable]}
  transferScheduleSummaryError$={[Function Store]}
  transferScheduleSummaryLoading$={[Function Store]}
  transferScheduleSummarySaving$={[Function Store]}
  transferScheduleSummarySubscription={[Function Subscriber]}
  userContextStore={[Function MockStore]}
>
  <pf-async-container>
    <div
      class="mt-4"
    >
      <div
        class="float-right"
      >
        <h5
          style="opacity: 0.6;"
        >
          STEP 5/5
        </h5>
      </div>
      <h4>
        Transfer Schedule
      </h4>
      <h5>
        Let us know how often you would like to refresh your company data.
      </h5>
      <div
        class="row mt-5 mb-3"
      >
        
      </div>
      <div
        class="d-flex justify-content-end"
      >
        <div
          class="p-2"
        >
          <button
            class="btn btn-secondary px-4"
            type="button"
          >
            Email List
          </button>
        </div>
        <div
          class="p-2"
        >
          <button
            class="btn btn-outline-danger px-4"
            type="button"
          >
            Cancel
          </button>
        </div>
        <div
          class="p-2"
        >
          <button
            class="btn btn-secondary px-4"
            type="button"
          >
            Back
          </button>
        </div>
        
        <div
          class="p-2"
        >
          <button
            class="btn btn-primary px-4"
            disabled=""
            type="button"
          >
            Finish
          </button>
        </div>
      </div>
    </div>
    <pf-modal-form
      class="integration-setup-complete-modal"
      title="Integration Setup Complete"
    >
      
      <h5
        class="mb-3 setup-complete-modal-header"
      >
        Integration Setup Complete!
      </h5>
      <div
        class="alert alert-success"
      >
         Your HRIS integration with Workday is ready to go! There is nothing else for you to do at this time. 
      </div>
      <div>
        <button
          class="btn btn-primary px-4 float-right"
        >
          Ok
        </button>
      </div>
    </pf-modal-form>
    
  </pf-async-container>
</pf-transfer-schedule>
`;

exports[`TransferSchedulePageComponent should show only supported entities and overflow correctly 1`] = `
<pf-transfer-schedule
  backRoute={[Function String]}
  connectionSummarySub={[Function Subscriber]}
  editStates={[Function Array]}
  emailRecipients$={[Function Store]}
  emailRecipientsModalOpen$={[Function Store]}
  emailRecipientsRemovingError$={[Function Store]}
  emailRecipientsSavingError$={[Function Store]}
  identity$={[Function Store]}
  identitySubscription={[Function Subscriber]}
  loadType={[Function String]}
  restoreCompletedSubscription={[Function Subscriber]}
  router={[Function Object]}
  showIntegrationFinishedModal$={[Function Store]}
  store={[Function MockStore]}
  syncSchedulesBackup={[Function Array]}
  transferScheduleSummary={[Function Array]}
  transferScheduleSummary$={[Function Observable]}
  transferScheduleSummaryError$={[Function Store]}
  transferScheduleSummaryLoading$={[Function Store]}
  transferScheduleSummarySaving$={[Function Store]}
  transferScheduleSummarySubscription={[Function Subscriber]}
  userContextStore={[Function MockStore]}
>
  <pf-async-container>
    <div
      class="mt-4"
    >
      <div
        class="float-right"
      >
        <h5
          style="opacity: 0.6;"
        >
          STEP 5/5
        </h5>
      </div>
      <h4>
        Transfer Schedule
      </h4>
      <h5>
        Let us know how often you would like to refresh your company data.
      </h5>
      <div
        class="row mt-5 mb-3"
      >
        
      </div>
      <div
        class="d-flex justify-content-end"
      >
        <div
          class="p-2"
        >
          <button
            class="btn btn-secondary px-4"
            type="button"
          >
            Email List
          </button>
        </div>
        <div
          class="p-2"
        >
          <button
            class="btn btn-outline-danger px-4"
            type="button"
          >
            Cancel
          </button>
        </div>
        <div
          class="p-2"
        >
          <button
            class="btn btn-secondary px-4"
            type="button"
          >
            Back
          </button>
        </div>
        
        <div
          class="p-2"
        >
          <button
            class="btn btn-primary px-4"
            disabled=""
            type="button"
          >
            Finish
          </button>
        </div>
      </div>
    </div>
    <pf-modal-form
      class="integration-setup-complete-modal"
      title="Integration Setup Complete"
    >
      
      <h5
        class="mb-3 setup-complete-modal-header"
      >
        Integration Setup Complete!
      </h5>
      <div
        class="alert alert-success"
      >
         Your HRIS integration with Workday is ready to go! There is nothing else for you to do at this time. 
      </div>
      <div>
        <button
          class="btn btn-primary px-4 float-right"
        >
          Ok
        </button>
      </div>
    </pf-modal-form>
    
  </pf-async-container>
</pf-transfer-schedule>
`;
