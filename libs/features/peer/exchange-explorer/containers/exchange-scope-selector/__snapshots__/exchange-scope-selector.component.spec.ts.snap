// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Features - Peer - Exchange Scope Selector Component should disable scope selector button when there are no scopes 1`] = `
<pf-exchange-scope-selector
  __ngContext__={[Function LRootView]}
  defaultExchangeScopeId$={[Function Observable]}
  defaultScopeToggled="false"
  deleteMode="false"
  deletingExchangeScope$={[Function Store]}
  exchangeScopeItems={[Function Array]}
  exchangeScopeItems$={[Function Observable]}
  exchangeScopeItemsLoading$={[Function Store]}
  exchangeScopeItemsSubscription={[Function Subscriber]}
  filteredExchangeScopeItems={[Function Array]}
  inDeleteModeSubscription={[Function Subscriber]}
  inDeleteScopeMode$={[Function Store]}
  isExchangeJobSpecific={[Function Boolean]}
  popover={[Function NgbPopover]}
  scopeToDelete="null"
  scopeToDelete$={[Function Store]}
  scopeToDeleteSubscription={[Function Subscriber]}
  selectedExchangeScopeItem="null"
  selectedExchangeScopeItem$={[Function Observable]}
  selectedExchangeScopeItemSubscription={[Function Subscriber]}
  settingsService={[Function Object]}
  store={[Function Store]}
  systemFilterLoaded$={[Function Store]}
  systemFilterLoadedSubscription={[Function Subscriber]}
>
  <div
    class="scope-selector-container custom-modal-popover custom-modal-arrow"
  >
    <button
      class="btn btn-secondary selector"
      disabled=""
      popovertitle="Select a Scope"
      type="button"
    >
      <span
        class="selector-caret"
      >
        <fa-icon
          icon="caret-right"
        />
      </span>
      <span
        class="selector-label text-muted"
      >
        Exchange Scope:
      </span>
      <span
        class="selection no-selection"
        title=""
      >
        No Selection
      </span>
    </button>
  </div>
</pf-exchange-scope-selector>
`;

exports[`Features - Peer - Exchange Scope Selector Component should display "No Selection" message when there is no exchange scope selected 1`] = `
<pf-exchange-scope-selector
  __ngContext__={[Function LRootView]}
  defaultExchangeScopeId$={[Function Observable]}
  defaultScopeToggled="false"
  deleteMode="false"
  deletingExchangeScope$={[Function Store]}
  exchangeScopeItems={[Function Array]}
  exchangeScopeItems$={[Function Observable]}
  exchangeScopeItemsLoading$={[Function Store]}
  exchangeScopeItemsSubscription={[Function Subscriber]}
  filteredExchangeScopeItems={[Function Array]}
  inDeleteModeSubscription={[Function Subscriber]}
  inDeleteScopeMode$={[Function Store]}
  isExchangeJobSpecific={[Function Boolean]}
  popover={[Function NgbPopover]}
  scopeToDelete="null"
  scopeToDelete$={[Function Store]}
  scopeToDeleteSubscription={[Function Subscriber]}
  selectedExchangeScopeItem="null"
  selectedExchangeScopeItem$={[Function Observable]}
  selectedExchangeScopeItemSubscription={[Function Subscriber]}
  settingsService={[Function Object]}
  store={[Function Store]}
  systemFilterLoaded$={[Function Store]}
  systemFilterLoadedSubscription={[Function Subscriber]}
>
  <div
    class="scope-selector-container custom-modal-popover custom-modal-arrow"
  >
    <button
      class="btn btn-secondary selector"
      disabled=""
      popovertitle="Select a Scope"
      type="button"
    >
      <span
        class="selector-caret"
      >
        <fa-icon
          icon="caret-right"
        />
      </span>
      <span
        class="selector-label text-muted"
      >
        Exchange Scope:
      </span>
      <span
        class="selection no-selection"
        title=""
      >
        No Selection
      </span>
    </button>
  </div>
</pf-exchange-scope-selector>
`;

exports[`Features - Peer - Exchange Scope Selector Component should display the currently selected exchange scope 1`] = `
<pf-exchange-scope-selector
  __ngContext__={[Function LRootView]}
  defaultExchangeScopeId$={[Function Observable]}
  defaultScopeToggled="false"
  deleteMode="false"
  deletingExchangeScope$={[Function Store]}
  exchangeScopeItems={[Function Array]}
  exchangeScopeItems$={[Function Observable]}
  exchangeScopeItemsLoading$={[Function Store]}
  exchangeScopeItemsSubscription={[Function Subscriber]}
  filteredExchangeScopeItems={[Function Array]}
  inDeleteModeSubscription={[Function Subscriber]}
  inDeleteScopeMode$={[Function Store]}
  isExchangeJobSpecific={[Function Boolean]}
  popover={[Function NgbPopover]}
  scopeToDelete="null"
  scopeToDelete$={[Function Store]}
  scopeToDeleteSubscription={[Function Subscriber]}
  selectedExchangeScopeItem="null"
  selectedExchangeScopeItem$={[Function Observable]}
  selectedExchangeScopeItemSubscription={[Function Subscriber]}
  settingsService={[Function Object]}
  store={[Function Store]}
  systemFilterLoaded$={[Function Store]}
  systemFilterLoadedSubscription={[Function Subscriber]}
>
  <div
    class="scope-selector-container custom-modal-popover custom-modal-arrow"
  >
    <button
      class="btn btn-secondary selector"
      disabled=""
      popovertitle="Select a Scope"
      type="button"
    >
      <span
        class="selector-caret"
      >
        <fa-icon
          icon="caret-right"
        />
      </span>
      <span
        class="selector-label text-muted"
      >
        Exchange Scope:
      </span>
      <span
        class="selection no-selection"
        title=""
      >
        No Selection
      </span>
    </button>
  </div>
</pf-exchange-scope-selector>
`;

exports[`Features - Peer - Exchange Scope Selector Component should load the exchange scope selector popover when there are exchange scopes 1`] = `
<pf-exchange-scope-selector
  __ngContext__={[Function LRootView]}
  defaultExchangeScopeId$={[Function Observable]}
  defaultScopeToggled="false"
  deleteMode="false"
  deletingExchangeScope$={[Function Store]}
  exchangeScopeItems={[Function Array]}
  exchangeScopeItems$={[Function Observable]}
  exchangeScopeItemsLoading$={[Function Store]}
  exchangeScopeItemsSubscription={[Function Subscriber]}
  filteredExchangeScopeItems={[Function Array]}
  inDeleteModeSubscription={[Function Subscriber]}
  inDeleteScopeMode$={[Function Store]}
  popover={[Function NgbPopover]}
  scopeToDelete="null"
  scopeToDelete$={[Function Store]}
  scopeToDeleteSubscription={[Function Subscriber]}
  selectedExchangeScopeItem="null"
  selectedExchangeScopeItem$={[Function Observable]}
  selectedExchangeScopeItemSubscription={[Function Subscriber]}
  settingsService={[Function Object]}
  store={[Function Store]}
  systemFilterLoaded$={[Function Store]}
  systemFilterLoadedSubscription={[Function Subscriber]}
>
  <div
    class="scope-selector-container custom-map-popover custom-map-arrow scope-selector-no-padding"
  >
    <button
      class="btn btn-secondary selector big-map-min-width"
      disabled=""
      popovertitle="Select a Scope"
      type="button"
    >
      <span
        class="selector-caret"
      >
        <fa-icon
          icon="caret-down"
        />
      </span>
      <span
        class="selector-label text-muted"
      >
        Exchange Scope:
      </span>
      <span
        class="selection no-selection"
        title=""
      >
        No Selection
      </span>
    </button>
  </div>
</pf-exchange-scope-selector>
`;

exports[`Features - Peer - Exchange Scope Selector Component should load the exchange scope selector with default options 1`] = `
<pf-exchange-scope-selector
  __ngContext__={[Function LRootView]}
  defaultExchangeScopeId$={[Function Observable]}
  defaultScopeToggled="false"
  deleteMode="false"
  deletingExchangeScope$={[Function Store]}
  exchangeScopeItems={[Function Array]}
  exchangeScopeItems$={[Function Observable]}
  exchangeScopeItemsLoading$={[Function Store]}
  exchangeScopeItemsSubscription={[Function Subscriber]}
  filteredExchangeScopeItems={[Function Array]}
  inDeleteModeSubscription={[Function Subscriber]}
  inDeleteScopeMode$={[Function Store]}
  popover={[Function NgbPopover]}
  scopeToDelete="null"
  scopeToDelete$={[Function Store]}
  scopeToDeleteSubscription={[Function Subscriber]}
  selectedExchangeScopeItem="null"
  selectedExchangeScopeItem$={[Function Observable]}
  selectedExchangeScopeItemSubscription={[Function Subscriber]}
  settingsService={[Function Object]}
  store={[Function Store]}
  systemFilterLoaded$={[Function Store]}
  systemFilterLoadedSubscription={[Function Subscriber]}
>
  <div
    class="scope-selector-container custom-map-popover custom-map-arrow scope-selector-no-padding"
  >
    <button
      class="btn btn-secondary selector big-map-min-width"
      disabled=""
      popovertitle="Select a Scope"
      type="button"
    >
      <span
        class="selector-caret"
      >
        <fa-icon
          icon="caret-down"
        />
      </span>
      <span
        class="selector-label text-muted"
      >
        Exchange Scope:
      </span>
      <span
        class="selection no-selection"
        title=""
      >
        No Selection
      </span>
    </button>
  </div>
</pf-exchange-scope-selector>
`;

exports[`Features - Peer - Exchange Scope Selector Component should match snapshot when in add data cuts modal 1`] = `
<pf-exchange-scope-selector
  __ngContext__={[Function LRootView]}
  defaultExchangeScopeId$={[Function Observable]}
  defaultScopeToggled="false"
  deleteMode="false"
  deletingExchangeScope$={[Function Store]}
  exchangeScopeItems={[Function Array]}
  exchangeScopeItems$={[Function Observable]}
  exchangeScopeItemsLoading$={[Function Store]}
  exchangeScopeItemsSubscription={[Function Subscriber]}
  filteredExchangeScopeItems={[Function Array]}
  inDeleteModeSubscription={[Function Subscriber]}
  inDeleteScopeMode$={[Function Store]}
  isExchangeJobSpecific={[Function Boolean]}
  popover={[Function NgbPopover]}
  scopeToDelete="null"
  scopeToDelete$={[Function Store]}
  scopeToDeleteSubscription={[Function Subscriber]}
  selectedExchangeScopeItem="null"
  selectedExchangeScopeItem$={[Function Observable]}
  selectedExchangeScopeItemSubscription={[Function Subscriber]}
  settingsService={[Function Object]}
  store={[Function Store]}
  systemFilterLoaded$={[Function Store]}
  systemFilterLoadedSubscription={[Function Subscriber]}
>
  <div
    class="scope-selector-container custom-modal-popover custom-modal-arrow"
  >
    <button
      class="btn btn-secondary selector"
      disabled=""
      popovertitle="Select a Scope"
      type="button"
    >
      <span
        class="selector-caret"
      >
        <fa-icon
          icon="caret-right"
        />
      </span>
      <span
        class="selector-label text-muted"
      >
        Exchange Scope:
      </span>
      <span
        class="selection no-selection"
        title=""
      >
        No Selection
      </span>
    </button>
  </div>
</pf-exchange-scope-selector>
`;

exports[`Features - Peer - Exchange Scope Selector Component should match snapshot when on big exchange-explorer-map 1`] = `
<pf-exchange-scope-selector
  __ngContext__={[Function LRootView]}
  defaultExchangeScopeId$={[Function Observable]}
  defaultScopeToggled="false"
  deleteMode="false"
  deletingExchangeScope$={[Function Store]}
  exchangeScopeItems={[Function Array]}
  exchangeScopeItems$={[Function Observable]}
  exchangeScopeItemsLoading$={[Function Store]}
  exchangeScopeItemsSubscription={[Function Subscriber]}
  filteredExchangeScopeItems={[Function Array]}
  inDeleteModeSubscription={[Function Subscriber]}
  inDeleteScopeMode$={[Function Store]}
  isExchangeJobSpecific="false"
  popover={[Function NgbPopover]}
  scopeToDelete="null"
  scopeToDelete$={[Function Store]}
  scopeToDeleteSubscription={[Function Subscriber]}
  selectedExchangeScopeItem="null"
  selectedExchangeScopeItem$={[Function Observable]}
  selectedExchangeScopeItemSubscription={[Function Subscriber]}
  settingsService={[Function Object]}
  store={[Function Store]}
  systemFilterLoaded$={[Function Store]}
  systemFilterLoadedSubscription={[Function Subscriber]}
>
  <div
    class="scope-selector-container custom-map-popover custom-map-arrow scope-selector-no-padding"
  >
    <button
      class="btn btn-secondary selector big-map-min-width"
      disabled=""
      popovertitle="Select a Scope"
      type="button"
    >
      <span
        class="selector-caret"
      >
        <fa-icon
          icon="caret-down"
        />
      </span>
      <span
        class="selector-label text-muted"
      >
        Exchange Scope:
      </span>
      <span
        class="selection no-selection"
        title=""
      >
        No Selection
      </span>
    </button>
  </div>
</pf-exchange-scope-selector>
`;
