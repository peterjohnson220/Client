// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Features - Peer - Exchange Scope Selector Component should disable scope selector button when there are no scopes 1`] = `
<pf-scope-selector
  addDataModal={[Function Boolean]}
  deleteMode="false"
  deletingExchangeScope$={[Function Store]}
  exchangeScopeItems={[Function Array]}
  exchangeScopeItems$={[Function Observable]}
  exchangeScopeItemsLoading$={[Function Store]}
  exchangeScopeItemsSubscription={[Function Subscriber]}
  inDeleteModeSubscription={[Function Subscriber]}
  inDeleteScopeMode$={[Function Store]}
  popover={[Function NgbPopover]}
  scopeToDelete="null"
  scopeToDelete$={[Function Store]}
  scopeToDeleteSubscription={[Function Subscriber]}
  selectedExchangeScopeItem$={[Function Store]}
  store={[Function Store]}
  systemFilterLoaded$={[Function Store]}
  systemFilterLoadedSubscription={[Function Subscriber]}
>
  <div
    class="scope-selector-container custom-modal-popover custom-modal-arrow"
    ng-reflect-klass="scope-selector-container"
    ng-reflect-ng-class="[object Object]"
  >
    
    
    <button
      class="btn btn-secondary selector"
      disabled=""
      ng-reflect-auto-close="outside"
      ng-reflect-ngb-popover="[object Object]"
      ng-reflect-placement="right"
      ng-reflect-popover-title="Select a Scope"
      popovertitle="Select a Scope"
      type="button"
    >
      
  
      
      <span
        class="selector-caret"
      >
        
        
        
        <fa-icon
          icon="caret-right"
        />
        
        
        
        
      
      </span>
      
  
      
      <span
        class="selector-label text-muted"
      >
        Exchange Scope:
      </span>
      
  
      
      <span
        class="selection no-selection"
        title=""
      >
        
        No Selection
      
      </span>
      
  
    
    </button>
    
  
  
  </div>
  
  
  
</pf-scope-selector>
`;

exports[`Features - Peer - Exchange Scope Selector Component should display "No Selection" message when there is no exchange scope selected 1`] = `
<pf-scope-selector
  addDataModal={[Function Boolean]}
  deleteMode="false"
  deletingExchangeScope$={[Function Store]}
  exchangeScopeItems={[Function Array]}
  exchangeScopeItems$={[Function Observable]}
  exchangeScopeItemsLoading$={[Function Store]}
  exchangeScopeItemsSubscription={[Function Subscriber]}
  inDeleteModeSubscription={[Function Subscriber]}
  inDeleteScopeMode$={[Function Store]}
  popover={[Function NgbPopover]}
  scopeToDelete="null"
  scopeToDelete$={[Function Store]}
  scopeToDeleteSubscription={[Function Subscriber]}
  selectedExchangeScopeItem$={[Function Store]}
  store={[Function Store]}
  systemFilterLoaded$={[Function Store]}
  systemFilterLoadedSubscription={[Function Subscriber]}
>
  <div
    class="scope-selector-container custom-modal-popover custom-modal-arrow"
    ng-reflect-klass="scope-selector-container"
    ng-reflect-ng-class="[object Object]"
  >
    
    
    <button
      class="btn btn-secondary selector"
      ng-reflect-auto-close="outside"
      ng-reflect-ngb-popover="[object Object]"
      ng-reflect-placement="right"
      ng-reflect-popover-title="Select a Scope"
      popovertitle="Select a Scope"
      type="button"
    >
      
  
      
      <span
        class="selector-caret"
      >
        
        
        
        <fa-icon
          icon="caret-right"
        />
        
        
        
        
      
      </span>
      
  
      
      <span
        class="selector-label text-muted"
      >
        Exchange Scope:
      </span>
      
  
      
      <span
        class="selection no-selection"
        title=""
      >
        
        No Selection
      
      </span>
      
  
    
    </button>
    
  
  
  </div>
  
  
  
</pf-scope-selector>
`;

exports[`Features - Peer - Exchange Scope Selector Component should display the currently selected exchange scope 1`] = `
<pf-scope-selector
  addDataModal={[Function Boolean]}
  deleteMode="false"
  deletingExchangeScope$={[Function Store]}
  exchangeScopeItems={[Function Array]}
  exchangeScopeItems$={[Function Observable]}
  exchangeScopeItemsLoading$={[Function Store]}
  exchangeScopeItemsSubscription={[Function Subscriber]}
  inDeleteModeSubscription={[Function Subscriber]}
  inDeleteScopeMode$={[Function Store]}
  popover={[Function NgbPopover]}
  scopeToDelete="null"
  scopeToDelete$={[Function Store]}
  scopeToDeleteSubscription={[Function Subscriber]}
  selectedExchangeScopeItem$={[Function Observable]}
  store={[Function Store]}
  systemFilterLoaded$={[Function Store]}
  systemFilterLoadedSubscription={[Function Subscriber]}
>
  <div
    class="scope-selector-container custom-modal-popover custom-modal-arrow"
    ng-reflect-klass="scope-selector-container"
    ng-reflect-ng-class="[object Object]"
  >
    
    
    <button
      class="btn btn-secondary selector"
      ng-reflect-auto-close="outside"
      ng-reflect-ngb-popover="[object Object]"
      ng-reflect-placement="right"
      ng-reflect-popover-title="Select a Scope"
      popovertitle="Select a Scope"
      type="button"
    >
      
  
      
      <span
        class="selector-caret"
      >
        
        
        
        <fa-icon
          icon="caret-right"
        />
        
        
        
        
      
      </span>
      
  
      
      <span
        class="selector-label text-muted"
      >
        Exchange Scope:
      </span>
      
  
      
      <span
        class="selection"
        title="MockExchangeScopeItemName"
      >
        
        MockExchangeScopeItemName
      
      </span>
      
  
    
    </button>
    
  
  
  </div>
  
  
  
</pf-scope-selector>
`;

exports[`Features - Peer - Exchange Scope Selector Component should match snapshot when in add data cuts modal 1`] = `
<pf-scope-selector
  addDataModal={[Function Boolean]}
  deleteMode="false"
  deletingExchangeScope$={[Function Store]}
  exchangeScopeItems={[Function Array]}
  exchangeScopeItems$={[Function Observable]}
  exchangeScopeItemsLoading$={[Function Store]}
  exchangeScopeItemsSubscription={[Function Subscriber]}
  inDeleteModeSubscription={[Function Subscriber]}
  inDeleteScopeMode$={[Function Store]}
  popover={[Function NgbPopover]}
  scopeToDelete="null"
  scopeToDelete$={[Function Store]}
  scopeToDeleteSubscription={[Function Subscriber]}
  selectedExchangeScopeItem$={[Function Store]}
  store={[Function Store]}
  systemFilterLoaded$={[Function Store]}
  systemFilterLoadedSubscription={[Function Subscriber]}
>
  <div
    class="scope-selector-container custom-modal-popover custom-modal-arrow"
    ng-reflect-klass="scope-selector-container"
    ng-reflect-ng-class="[object Object]"
  >
    
    
    <button
      class="btn btn-secondary selector"
      ng-reflect-auto-close="outside"
      ng-reflect-ngb-popover="[object Object]"
      ng-reflect-placement="right"
      ng-reflect-popover-title="Select a Scope"
      popovertitle="Select a Scope"
      type="button"
    >
      
  
      
      <span
        class="selector-caret"
      >
        
        
        
        <fa-icon
          icon="caret-right"
        />
        
        
        
        
      
      </span>
      
  
      
      <span
        class="selector-label text-muted"
      >
        Exchange Scope:
      </span>
      
  
      
      <span
        class="selection no-selection"
        title=""
      >
        
        No Selection
      
      </span>
      
  
    
    </button>
    
  
  
  </div>
  
  
  
</pf-scope-selector>
`;

exports[`Features - Peer - Exchange Scope Selector Component should match snapshot when on big map 1`] = `
<pf-scope-selector
  addDataModal="false"
  deleteMode="false"
  deletingExchangeScope$={[Function Store]}
  exchangeScopeItems={[Function Array]}
  exchangeScopeItems$={[Function Observable]}
  exchangeScopeItemsLoading$={[Function Store]}
  exchangeScopeItemsSubscription={[Function Subscriber]}
  inDeleteModeSubscription={[Function Subscriber]}
  inDeleteScopeMode$={[Function Store]}
  popover={[Function NgbPopover]}
  scopeToDelete="null"
  scopeToDelete$={[Function Store]}
  scopeToDeleteSubscription={[Function Subscriber]}
  selectedExchangeScopeItem$={[Function Store]}
  store={[Function Store]}
  systemFilterLoaded$={[Function Store]}
  systemFilterLoadedSubscription={[Function Subscriber]}
>
  <div
    class="scope-selector-container custom-map-popover custom-map-arrow scope-selector-no-padding"
    ng-reflect-klass="scope-selector-container"
    ng-reflect-ng-class="[object Object]"
  >
    
    
    <button
      class="btn btn-secondary selector"
      ng-reflect-auto-close="outside"
      ng-reflect-ngb-popover="[object Object]"
      ng-reflect-placement="bottom-right"
      ng-reflect-popover-title="Select a Scope"
      popovertitle="Select a Scope"
      type="button"
    >
      
  
      
      <span
        class="selector-caret"
      >
        
        
        
        
        
        
        <fa-icon
          icon="caret-down"
        />
        
      
      </span>
      
  
      
      <span
        class="selector-label text-muted"
      >
        Exchange Scope:
      </span>
      
  
      
      <span
        class="selection no-selection"
        title=""
      >
        
        No Selection
      
      </span>
      
  
    
    </button>
    
  
  
  </div>
  
  
  
</pf-scope-selector>
`;
